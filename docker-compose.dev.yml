version: "3.8"

services:
  # Base de datos PostgreSQL para desarrollo
  postgres-dev:
    image: postgres:15-alpine
    container_name: crm_postgres_dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: crm_dev
      POSTGRES_USER: crm_dev_user
      POSTGRES_PASSWORD: crm_dev_password
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    ports:
      - "5433:5432"
    networks:
      - crm_dev_network

  # Backend en modo desarrollo
  backend-dev:
    build:
      context: ./CRM_Back
      dockerfile: Dockerfile.dev
    container_name: crm_backend_dev
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 3001
      DATABASE_URL: postgresql://crm_dev_user:crm_dev_password@postgres-dev:5432/crm_dev
      JWT_SECRET: dev-jwt-secret-key
      RECAPTCHA_SECRET_KEY: ${RECAPTCHA_SECRET_KEY}
      ALLOWED_ORIGINS: http://localhost:5173,http://localhost:3000
    ports:
      - "3001:3001"
    depends_on:
      - postgres-dev
    networks:
      - crm_dev_network
    volumes:
      - ./CRM_Back:/app
      - /app/node_modules
    command: npm run dev

  # Frontend en modo desarrollo
  frontend-dev:
    build:
      context: ./CRM
      dockerfile: Dockerfile.dev
    container_name: crm_frontend_dev
    restart: unless-stopped
    ports:
      - "5173:5173"
    networks:
      - crm_dev_network
    volumes:
      - ./CRM:/app
      - /app/node_modules
    environment:
      - VITE_API_URL=http://localhost:3001
    command: npm run dev

  # Adminer para gesti√≥n de base de datos
  adminer-dev:
    image: adminer
    container_name: crm_adminer_dev
    restart: unless-stopped
    ports:
      - "8081:8080"
    depends_on:
      - postgres-dev
    networks:
      - crm_dev_network

volumes:
  postgres_dev_data:
    driver: local

networks:
  crm_dev_network:
    driver: bridge
